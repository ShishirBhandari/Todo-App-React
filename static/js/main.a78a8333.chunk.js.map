{"version":3,"sources":["components/Todo/Todo.module.css","components/Search/Search.module.css","components/Todos/Todos.module.css","components/Search/Search.js","components/Todo/Todo.js","components/Todos/Todos.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","search","props","className","styles","Search","SearchForm","type","placeholder","onChange","e","searchTodos","target","value","todo","Todo","completedAt","IsCompleted","Header","classes","LeftWrapper","Checkbox","Checked","onClick","todoCompleted","createdAt","toDateString","slice","toTimeString","Action","editing","editTodo","parentElement","nextSibling","children","innerHTML","editClicked","Red","deleteTodo","Content","NotEditable","contentEditable","console","log","title","description","todos","sort","a","b","Todos","AddButton","addTodo","map","index","deletedAt","event","t","d","bind","key","id","App","Date","state","preventDefault","newTodos","setState","length","push","query","forEach","toLowerCase","includes","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a78a8333.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"Todo_Todo__B4yGm\",\"IsCompleted\":\"Todo_IsCompleted__136k3\",\"Header\":\"Todo_Header__2Qf6j\",\"Content\":\"Todo_Content__3Oog0\",\"LeftWrapper\":\"Todo_LeftWrapper__1xopx\",\"Checkbox\":\"Todo_Checkbox__1mrkc\",\"Checked\":\"Todo_Checked__tkajf\",\"Action\":\"Todo_Action__1mdWF\",\"Red\":\"Todo_Red__3j4Xl\",\"NotEditable\":\"Todo_NotEditable__3lbPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"SearchForm\":\"Search_SearchForm__J2TKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todos\":\"Todos_Todos__36L4r\",\"AddButton\":\"Todos_AddButton__1uZIM\"};","import React from 'react';\n\nimport styles from './Search.module.css';\n\nconst search = props => {\n  return (\n    <div className={styles.Search}>\n      <span>TODO APP</span>\n      <form className={styles.SearchForm}>\n        <input\n          type='search'\n          placeholder='Search Todo'\n          onChange={e => props.searchTodos(e, e.target.value)}\n        ></input>\n        {/* <input\n          type='button'\n          value='Search'\n          onClick={e => props.searchTodos(e, e.target.previousSibling.value)}\n        ></input> */}\n      </form>\n    </div>\n  );\n};\n\nexport default search;\n","import React from 'react';\n\nimport styles from './Todo.module.css';\nimport classes from './Todo.module.css';\n\nconst todo = props => {\n  const todo = props.todo;\n\n  var currentTitle = '';\n  var currentDescription = '';\n  var editable = false;\n\n  const titleChanged = e => {\n    console.log('editing');\n    currentTitle = e.target.innerHTML;\n  };\n\n  const descriptionChanged = e => {\n    currentDescription = e.target.innerHTML;\n  };\n\n  return (\n    <li\n      className={\n        styles.Todo + ' ' + (todo.completedAt == null ? '' : styles.IsCompleted)\n      }\n    >\n      <div className={styles.Header + ' clearfix'}>\n        <div className={classes.LeftWrapper}>\n          <form className={classes.Checkbox}>\n            {/* <input type='checkbox' onChange={props.todoCompleted} /> */}\n            <span\n              className={todo.completedAt == null ? '' : styles.Checked}\n              onClick={props.todoCompleted}\n            >\n              <i className='material-icons'>check</i>\n            </span>\n          </form>\n\n          <p>\n            {todo.createdAt.toDateString().slice(4)},{' '}\n            {todo.createdAt.toTimeString().slice(0, 8)}\n          </p>\n        </div>\n\n        <div className={styles.Action}>\n          <span\n            onClick={\n              todo.editing\n                ? e =>\n                    props.editTodo(\n                      e,\n                      e.target.parentElement.parentElement.parentElement\n                        .nextSibling.children[0].innerHTML,\n                      e.target.parentElement.parentElement.parentElement\n                        .nextSibling.children[1].innerHTML\n                    )\n                : props.editClicked\n            }\n          >\n            <i className='material-icons'>\n              {todo.editing ? 'save' : 'edit'}\n              {/* edit */}\n            </i>\n          </span>\n          <span className={styles.Red} onClick={props.deleteTodo}>\n            <i className='material-icons'>delete</i>\n          </span>\n        </div>\n      </div>\n\n      <div className={styles.Content}>\n        {/* <span>{todo.title}</span>\n        <p>{todo.description}</p> */}\n\n        <span\n          className={todo.editing ? '' : classes.NotEditable}\n          contentEditable={todo.editing}\n          onChange={titleChanged}\n        >\n          {/* <input\n            type='text'\n            name='title'\n            value={todo.title}\n            readOnly={true}\n            onChange={titleChanged}\n          ></input> */}\n\n          {todo.title}\n        </span>\n\n        <p\n          className={todo.editing ? '' : classes.NotEditable}\n          contentEditable={todo.editing}\n          onChange={descriptionChanged}\n        >\n          {/* <textarea\n            name='description'\n            readOnly={true}\n            onChange={descriptionChange}\n          >\n            {todo.description}\n          </textarea> */}\n\n          {todo.description}\n        </p>\n\n        {/* <button\n          className={styles.Content}\n          onClick={e => props.editTodo(e, currentTitle, currentDescription)}\n        >\n          Save\n        </button> */}\n      </div>\n    </li>\n\n    // <li\n    //   className={\n    //     styles.Todo +\n    //     ' ' +\n    //     (todo.completedAt == null ? 'hello' : styles.IsCompleted)\n    //   }\n    // >\n    //   <form>\n    //     <input type='checkbox' onChange={props.todoCompleted} />\n    //   </form>\n\n    //   <div className={styles.Content}>\n    //     <span>{todo.title}</span>\n    //     <div className={styles.HorizontalLine}></div>\n    //     <p>{todo.description}</p>\n    //     <p>{todo.createdAt.toDateString()}</p>\n    //   </div>\n\n    //   <div className={styles.Action}>\n    //     <span onClick={props.editTodo}>\n    //       <i className='material-icons'>edit</i>\n    //     </span>\n    //     <span className={styles.Red} onClick={props.deleteTodo}>\n    //       <i className='material-icons'>delete</i>\n    //     </span>\n    //   </div>\n    // </li>\n  );\n};\n\nexport default todo;\n","import React from 'react';\n\nimport Todo from '../Todo/Todo';\nimport TodoForm from '../Todo/TodoForm';\n\nimport styles from './Todos.module.css';\n\nconst todos = props => {\n  var todos = props.todos.sort((a, b) => {\n    return a.completedAt - b.completedAt;\n  });\n\n  todos = todos.sort((a, b) => {\n    return b.createdAt - a.createdAt;\n  });\n\n  return (\n    <ul className={styles.Todos}>\n      <li className={styles.AddButton} onClick={e => props.addTodo(e)}>\n        +\n      </li>\n\n      {/* <TodoForm addTodo={props.addTodo}></TodoForm> */}\n\n      {todos\n        .sort((a, b) => {\n          return b.createdAt - a.createdAt;\n        })\n        .sort((a, b) => (a.completedAt ? true : false))\n        .map((todo, index) => {\n          if (todo.deletedAt == null)\n            return (\n              <Todo\n                todo={todo}\n                todoCompleted={event => props.todoCompleted(event, index)}\n                editClicked={e => props.editClicked(e, index)}\n                editTodo={(e, t, d) => {\n                  return props.editTodo(e, index, t, d);\n                }}\n                deleteTodo={props.deleteTodo.bind(this, index)}\n                key={todo.id}\n              ></Todo>\n            );\n          else return null;\n        })}\n    </ul>\n  );\n};\n\nexport default todos;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Search from './../components/Search/Search';\nimport Todos from './../components/Todos/Todos';\nimport { EventEmitter } from 'events';\nimport upperCase from 'upper-case';\n\nclass App extends Component {\n  todos = [\n    {\n      id: 1,\n      title: 'Go to Market',\n      description: 'TBD: Lorem Ipsum Porem',\n      createdAt: new Date(),\n      completedAt: null,\n      deletedAt: null,\n      editing: false\n    },\n    {\n      id: 2,\n      title: \"Go to Ravi's house\",\n      description:\n        'Lorem Ipsum: Lorem Ipsum Porem Lorem Ipsum Porem Lorem Ipsum Porem Lorem Ipsum Porem',\n      createdAt: new Date(),\n      completedAt: new Date(),\n      deletedAt: null\n    },\n    {\n      id: 3,\n      title: 'List items',\n      description: 'TBD: Lorem Ipsum  Porem',\n      createdAt: new Date(),\n      completedAt: null,\n      deletedAt: null\n    },\n    {\n      id: 4,\n      title: 'Buy groceries',\n      description: 'TBD: Lorem Ipsum  Porem',\n      createdAt: new Date(),\n      completedAt: null,\n      deletedAt: null\n    },\n    {\n      id: 5,\n      title: 'Cook food.',\n      description: 'TBD: Lorem Ipsum  Porem',\n      createdAt: new Date(),\n      completedAt: null,\n      deletedAt: null\n    }\n  ];\n\n  state = {\n    // todos: this.todos\n    todos: [...this.todos]\n  };\n\n  todoCompleted = (event, index) => {\n    event.preventDefault();\n\n    var todo = this.state.todos[index];\n\n    todo.completedAt = !todo.completedAt ? new Date() : null;\n\n    var newTodos = this.todos;\n    newTodos[index] = todo;\n    // this.todos[index] = todo;\n\n    this.setState({\n      todos: [...newTodos]\n    });\n  };\n\n  editClicked = (e, index) => {\n    var todo = this.state.todos[index];\n    todo.editing = !todo.editing;\n\n    var newTodos = this.todos;\n    newTodos[index] = todo;\n    // this.todos[index] = todo;\n\n    this.setState({\n      todos: [...newTodos]\n    });\n  };\n\n  editTodo = (e, index, title, description) => {\n    var todo = this.state.todos[index];\n    todo.title = title;\n    todo.description = description;\n    todo.editing = false;\n\n    var newTodos = this.todos;\n    newTodos[index] = todo;\n    // this.todos[index] = todo;\n\n    this.setState({\n      todos: [...newTodos]\n    });\n  };\n\n  deleteTodo = index => {\n    var todo = this.state.todos[index];\n    todo.deletedAt = new Date();\n\n    var newTodos = this.todos;\n    newTodos[index] = todo;\n    // this.todos[index] = todo;\n\n    this.setState({\n      todos: [...newTodos]\n    });\n  };\n\n  addTodo = (e, title, description) => {\n    e.preventDefault();\n\n    var todo = {\n      id: this.state.todos.length + 1,\n      title: 'New Todo',\n      description: 'description',\n      createdAt: new Date(),\n      completedAt: null,\n      deletedAt: null,\n      editing: true\n    };\n\n    var newTodos = this.todos;\n    newTodos.push(todo);\n\n    // this.todos.push(todo);\n\n    this.setState({\n      todos: [...newTodos]\n    });\n  };\n\n  searchTodos = (e, query) => {\n    console.log(query);\n\n    if (query === '') {\n      this.setState({\n        todos: [...this.todos]\n      });\n\n      return;\n    }\n\n    var newTodos = [];\n\n    console.log(this.todos);\n\n    this.todos.forEach(todo => {\n      query = query.toLowerCase();\n      if (\n        todo.title.toLowerCase().includes(query) ||\n        todo.description.toLowerCase().includes(query)\n      ) {\n        newTodos.push(todo);\n      }\n    });\n\n    this.setState({\n      todos: [...newTodos]\n    });\n\n    return;\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <Search searchTodos={this.searchTodos}></Search>\n        </header>\n        <div className='App-content'>\n          <Todos\n            todos={this.state.todos}\n            todoCompleted={this.todoCompleted}\n            editClicked={this.editClicked}\n            editTodo={this.editTodo}\n            deleteTodo={this.deleteTodo}\n            addTodo={this.addTodo}\n          ></Todos>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}